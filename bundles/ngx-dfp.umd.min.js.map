{"version":3,"sources":["ng://ngx-dfp/src/service/http-error.service.ts","null","ng://ngx-dfp/src/service/parse-duration.service.ts","ng://ngx-dfp/src/service/script-injector.service.ts","ng://ngx-dfp/src/service/idle.service.ts","ng://ngx-dfp/src/class/dfp-errors.class.ts","ng://ngx-dfp/src/class/dfp-config.class.ts","ng://ngx-dfp/src/service/dfp.service.ts","ng://ngx-dfp/src/service/dfp-id-generator.service.ts","ng://ngx-dfp/src/service/dfp-refresh.service.ts","ng://ngx-dfp/src/directive/dfp-ad.directive.ts","ng://ngx-dfp/src/directive/dfp-ad-responsive.directive.ts","ng://ngx-dfp/src/directive/dfp-responsive.directive.ts","ng://ngx-dfp/src/directive/dfp-size.directive.ts","ng://ngx-dfp/src/directive/dfp-targeting.directive.ts","ng://ngx-dfp/src/directive/dfp-exclusion.directive.ts","ng://ngx-dfp/src/directive/dfp-value.directive.ts","ng://ngx-dfp/src/directive/dfp-video.directive.ts","ng://ngx-dfp/src/directive/dfp-audience-pixel.directive.ts","ng://ngx-dfp/src/dfp.module.ts"],"names":["HttpErrorService","code","prototype","httpError","response","message","console","log","status","Injectable","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","DFPDurationError","_super","interval","tslib_1.__extends","Error","ParseDurationService","convertToMilliseconds","time","unit","assert","test","convert","match","parseFloat","parseDuration","undefined","TypeError","ScriptInjectorService","completeURL","url","document","location","protocol","createScript","script","createElement","async","type","src","promiseScript","promise","Promise","resolve","reject","onload","onerror","path","loaded","catch","_this","injectScript","head","querySelector","appendChild","scriptInjector","IdleService","platformId","zone","win","isPlatformBrowser","window","requestIdleCallback","fun","runOutsideAngular","setTimeout","request","decorators","Inject","args","PLATFORM_ID","NgZone","DFPIncompleteError","directiveName","missingName","isAttribute","DfpConfig","DFPTypeError","attributeName","wrongValue","expectedType","DFPMissingParentError","parents","_i","parentMessage","isArray","map","slice","join","DFP_CONFIG","InjectionToken","factory","DFPConfigurationError","DfpService","idleLoad","config","googletag","dfpConfig","cmd","setup","loadGPT","loadScript","then","key","addSafeFrameConfig","pubads","safeFrameConfig","setSafeFrameConfig","addTargeting","globalTargeting","setTargeting","addLocation","setLocation","apply","addPPID","ppid","setPublisherProvidedId","enableVideoAds","personalizedAds","setRequestNonPersonalizedAds","collapseIfEmpty","collapseEmptyDivs","disableInitialLoad","setForceSafeFrame","forceSafeFrame","setCentering","centering","enableAsyncRendering","singleRequestMode","enableServices","hasLoaded","defineTask","task","Optional","DfpIDGeneratorService","generateID","id","Math","random","toString","generatedIDs","dfpIDGenerator","element","isTaken","isUnique","DFPRefreshError","DfpRefreshService","inject","EventEmitter","slotRefresh","slot","refreshInterval","initRefresh","deferred","from","toPromise","hasSlotInterval","cancelInterval","addSlotInterval","refreshSlots","singleRequest","closed","unsubscribe","timer","subscribe","enableSingleRequest","forEach","s","display","getSlotElementId","refresh","intervals","slotIntervalKey","tasks","parsedInterval","validateInterval","doc","get","DOCUMENT","hiddenCheck","getElementById","refreshEvent","emit","getSlotId","getDomId","milliseconds","beforeParsing","warn","getComputedStyle","parentElement","Injector","DfpAdDirective","elementRef","dfp","dfpRefresh","router","afterRefresh","onSameNavigation","events","pipe","filter","event","NavigationEnd","refreshContent","ngOnInit","nativeElement","ngAfterViewInit","defineSlot","ngOnDestroy","destroySlots","setResponsiveMapping","ad","getState","responsiveMapping","sizeMapping","mapping","addSize","viewportSize","adSizes","defineSizeMapping","build","adUnit","sizes","clickUrl","setClickUrl","setCollapseEmptyDiv","JSON","parse","renderEnded","googleSlotEvent","data","targetings","targeting","values","exclusions","exclusion","setCategoryExclusion","scripts","addService","companionAds","checkValid","defineProperty","freeze","size","addResponsiveMapping","addExclusion","addScript","Directive","selector","ElementRef","Router","Input","Output","DfpAdResponsiveDirective","normalizeIframe","isHidden","iframe","getIframe","iframeWidth","width","winWidth","innerWidth","state","max","setAttribute","forwardRef","HostListener","DfpResponsiveDirective","val","viewport","DfpSizeDirective","resp","target","innerText","height","trim","DfpTargetingDirective","v","addValue","ngAfterContentInit","find","item","DfpExclusionDirective","DfpValueDirective","DfpVideoDirective","renderer","el","contentPlayer","adContainer","addClass","loadImaSdk","setUpIMA","adActions","act","play","pause","resume","adsDone","initialUserAction","loadAds","adsManager","adDisplayContainer","google","ima","AdDisplayContainer","adsLoader","AdsLoader","addEventListener","AdsManagerLoadedEvent","Type","ADS_MANAGER_LOADED","onAdsManagerLoaded","AdErrorEvent","AD_ERROR","onAdError","onended","contentEnded","initialize","load","requestAds","adTagUrl","adsRequest","AdsRequest","linearAdSlotWidth","linearAdSlotHeight","nonLinearAdSlotWidth","nonLinearAdSlotHeight","contentCompleteCalled","contentComplete","adsManagerLoadedEvent","adsRenderingSettings","AdsRenderingSettings","restoreCustomPlaybackStateOnAdBreakComplete","getAdsManager","startAdsManager","AdEvent","CONTENT_PAUSE_REQUESTED","onContentPauseRequested","CONTENT_RESUME_REQUESTED","onContentResumeRequested","ALL_ADS_COMPLETED","CLICK","COMPLETE","FIRST_QUARTILE","LOADED","MIDPOINT","PAUSED","STARTED","THIRD_QUARTILE","adEvent","onAdEvent","init","ViewMode","NORMAL","start","pauseForAd","resumeAfterAd","getAd","isLinear","adEvents","adErrorEvent","destroy","adTag","Renderer2","DfpAudiencePixelDirective","pixel","segmentId","border","style","visibility","append","DIRECTIVES","SERVICES","DfpModule","forRoot","ngModule","providers","IdleLoad","provide","useValue","NgModule","imports","declarations","exports"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class HttpErrorService {\r\n\r\n  httpError(response, message) {\r\n    console.log(`Error (${response.status}) ${message ? message : ''}`);\r\n  }\r\n\r\n  isErrorCode = function (code) {\r\n    if (typeof code === 'number') {\r\n      return !(code >= 200 && code < 300);\r\n    }\r\n    return code[0] !== '2';\r\n  };\r\n\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nclass DFPDurationError extends Error {\r\n  constructor(interval) {\r\n    super(`Invalid interval: '${interval}'ls`);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class ParseDurationService {\r\n\r\n  convertToMilliseconds(time, unit) {\r\n    console.assert(/^(m?s|min|h)$/g.test(unit));\r\n\r\n    if (unit === 'ms') { return time; }\r\n    if (unit === 's') { return time * 1000; }\r\n    if (unit === 'min') { return time * 60 * 1000; }\r\n\r\n    return time * 60 * 60 * 1000;\r\n  }\r\n\r\n  convert(match) {\r\n    const time = parseFloat(match[1]);\r\n\r\n    if (match.length === 2) { return time; }\r\n\r\n    return this.convertToMilliseconds(time, match[2]);\r\n  }\r\n\r\n  parseDuration(interval) {\r\n\r\n    if (interval === undefined || interval === null) {\r\n      throw new DFPDurationError(interval);\r\n    }\r\n\r\n    if (typeof interval === 'number') {\r\n      return interval;\r\n    }\r\n\r\n    if (typeof interval !== 'string') {\r\n      throw new TypeError(`'${interval}' must be of number or string type`);\r\n    }\r\n\r\n    const match = interval.match(/((?:\\d+)?.?\\d+)(m?s|min|h)?/);\r\n\r\n    if (!match) {\r\n      throw new DFPDurationError(interval);\r\n    }\r\n\r\n    return this.convert(match);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { HttpErrorService } from './http-error.service';\r\n\r\n@Injectable()\r\nexport class ScriptInjectorService {\r\n\r\n  constructor(private httpError: HttpErrorService) { }\r\n\r\n  private completeURL(url) {\r\n    const ssl = document.location.protocol === 'https:';\r\n    return (ssl ? 'https:' : 'http:') + url;\r\n  }\r\n\r\n  private createScript(url) {\r\n    const script = document.createElement('script');\r\n\r\n    script.async = true;\r\n    script.type = 'text/javascript';\r\n    script.src = this.completeURL(url);\r\n\r\n    return script;\r\n  }\r\n\r\n  private promiseScript(script, url) {\r\n    const promise = new Promise((resolve, reject) => {\r\n      script.onload = () => {\r\n        resolve(script);\r\n      };\r\n      script.onerror = () => {\r\n        reject({\r\n          path: url,\r\n          loaded: false\r\n        });\r\n      };\r\n    });\r\n\r\n    promise.catch(response => {\r\n      this.httpError.httpError({ status: 400 }, `loading script \"${url}\"`);\r\n    });\r\n\r\n    return promise;\r\n  }\r\n\r\n  injectScript(script) {\r\n    const head = document.head || document.querySelector('head');\r\n    head.appendChild(script);\r\n  }\r\n\r\n  scriptInjector(url) {\r\n    const script = this.createScript(url);\r\n    this.injectScript(script);\r\n    return this.promiseScript(script, url);\r\n  }\r\n\r\n}\r\n","import { Injectable, NgZone, Inject, PLATFORM_ID } from '@angular/core';\r\nimport { isPlatformBrowser } from '@angular/common';\r\n\r\n@Injectable()\r\nexport class IdleService {\r\n\r\n  private requestIdleCallback: any;\r\n\r\n  constructor(\r\n    @Inject(PLATFORM_ID) platformId: Object,\r\n    zone: NgZone\r\n  ) {\r\n    const win: any = isPlatformBrowser(platformId) ? window : {};\r\n    if (win.requestIdleCallback) {\r\n      this.requestIdleCallback = (fun) => {\r\n        return win.requestIdleCallback(fun);\r\n      };\r\n    } else {\r\n      this.requestIdleCallback = (fun) => {\r\n        return zone.runOutsideAngular(() => win.setTimeout(fun, 50));\r\n      };\r\n    }\r\n  }\r\n\r\n  request(fun) {\r\n    this.requestIdleCallback(fun);\r\n  }\r\n\r\n}\r\n","\r\n\r\nexport class DFPIncompleteError extends Error {\r\n    constructor(directiveName, missingName, isAttribute?) {\r\n        super(`Incomplete definition of '${directiveName}': ` +\r\n            `Missing ${isAttribute ? 'attribute' : 'child directive'} ` +\r\n            `'${missingName}'.`);\r\n    }\r\n}\r\n\r\nexport class DFPTypeError extends Error {\r\n    constructor(directiveName, attributeName, wrongValue, expectedType) {\r\n        super(\r\n            `Wrong type for attribute '${attributeName}' on ` +\r\n            `directive '${directiveName}': Expected ${expectedType}` +\r\n            `, got ${typeof wrongValue}`\r\n        );\r\n    }\r\n}\r\n\r\nexport class DFPMissingParentError extends Error {\r\n    constructor(directiveName, ...parents) {\r\n        console.assert(parents && parents.length > 0);\r\n        if (Array.isArray(parents[0])) {\r\n            parents = parents[0];\r\n        }\r\n\r\n        let parentMessage;\r\n        if (parents.length > 1) {\r\n            parents = parents.map(p => `'${p}'`);\r\n            parentMessage = ', which must be ';\r\n            parentMessage += parents.slice(0, -1).join(', ');\r\n            parentMessage += ` or ${parents[parents.length - 1]}`;\r\n        } else {\r\n            parentMessage = ` '${parents[0]}'`;\r\n        }\r\n\r\n        super(\r\n            `Invalid use of '${directiveName}' directive. ` +\r\n            `Missing parent directive${parentMessage}.`\r\n        );\r\n    }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport class DfpTargeting {\r\n  [key: string]: Array<string>;\r\n}\r\n\r\nexport class DfpConfig {\r\n  idleLoad?: boolean;\r\n  onSameNavigation?: 'refresh' | 'ignore';\r\n  singleRequestMode?: boolean;\r\n  enableVideoAds?: boolean;\r\n  personalizedAds?: boolean;\r\n  collapseIfEmpty?: boolean;\r\n  centering?: boolean;\r\n  location?: string | Array<string>;\r\n  ppid?: string;\r\n  globalTargeting?: DfpTargeting;\r\n  forceSafeFrame?: boolean;\r\n  safeFrameConfig?: object;\r\n  loadGPT?: boolean;\r\n}\r\n\r\nexport const DFP_CONFIG = new InjectionToken<DfpConfig>('dfpConfig', {\r\n  factory: () => new DfpConfig()\r\n});\r\n","import { Injectable, Optional, PLATFORM_ID, Inject } from '@angular/core';\r\nimport { isPlatformBrowser } from '@angular/common';\r\n\r\nimport { DfpConfig, DFP_CONFIG } from '../class';\r\nimport { IdleService } from './idle.service';\r\nimport { ScriptInjectorService } from './script-injector.service';\r\n\r\nexport const GPT_LIBRARY_URL = '//www.googletagservices.com/tag/js/gpt.js';\r\n\r\nclass DFPConfigurationError extends Error { }\r\n\r\n@Injectable()\r\nexport class DfpService {\r\n\r\n  private enableVideoAds = false;\r\n\r\n  private personalizedAds = true;\r\n\r\n  private collapseIfEmpty = true;\r\n\r\n  private centering = false;\r\n\r\n  private location = null;\r\n\r\n  private ppid = null;\r\n\r\n  private globalTargeting = null;\r\n\r\n  private forceSafeFrame = false;\r\n\r\n  private safeFrameConfig = null;\r\n\r\n  private loadGPT = true;\r\n\r\n  private loaded = false;\r\n\r\n  constructor(\r\n    @Inject(PLATFORM_ID) private platformId: Object,\r\n    @Optional() idleLoad: IdleService,\r\n    @Inject(DFP_CONFIG) private config: DfpConfig,\r\n    private scriptInjector: ScriptInjectorService\r\n  ) {\r\n    if (isPlatformBrowser(this.platformId)) {\r\n      const win: any = window,\r\n        googletag = win.googletag || {};\r\n\r\n      this.dfpConfig();\r\n\r\n      googletag.cmd = googletag.cmd || [];\r\n      googletag.cmd.push(() => {\r\n        this.setup();\r\n      });\r\n      win.googletag = googletag;\r\n\r\n      if (this.loadGPT) {\r\n        const loadScript = () => {\r\n          this.scriptInjector.scriptInjector(GPT_LIBRARY_URL).then((script) => {\r\n            this.loaded = true;\r\n          });\r\n        };\r\n        if (idleLoad) {\r\n          idleLoad.request(loadScript);\r\n        } else {\r\n          loadScript();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private dfpConfig() {\r\n    for (const key in this.config) {\r\n      if (this.hasOwnProperty(key)) {\r\n        this[key] = this.config[key];\r\n      }\r\n    }\r\n  }\r\n\r\n  private addSafeFrameConfig(pubads) {\r\n    if (!this.safeFrameConfig) { return false; }\r\n    if (typeof this.safeFrameConfig !== 'object') {\r\n      throw new DFPConfigurationError('FrameConfig must be an object');\r\n    }\r\n    pubads.setSafeFrameConfig(this.safeFrameConfig);\r\n  }\r\n\r\n  private addTargeting(pubads) {\r\n    if (!this.globalTargeting) { return false; }\r\n    if (typeof this.globalTargeting !== 'object') {\r\n      throw new DFPConfigurationError('Targeting must be an object');\r\n    }\r\n\r\n    for (const key in this.globalTargeting) {\r\n      if (this.globalTargeting.hasOwnProperty(key)) {\r\n        pubads.setTargeting(key, this.globalTargeting[key]);\r\n      }\r\n    }\r\n  }\r\n\r\n  private addLocation(pubads) {\r\n    if (!this.location) { return false; }\r\n\r\n    if (typeof this.location === 'string') {\r\n      pubads.setLocation(this.location);\r\n      return;\r\n    }\r\n\r\n    if (!Array.isArray(this.location)) {\r\n      throw new DFPConfigurationError('Location must be an ' +\r\n        'array or string');\r\n    }\r\n\r\n    pubads.setLocation.apply(pubads, this.location);\r\n  }\r\n\r\n  private addPPID(pubads) {\r\n    if (!this.ppid) { return false; }\r\n    if (typeof this.ppid !== 'string') {\r\n      throw new DFPConfigurationError('PPID must be a string');\r\n    }\r\n\r\n    pubads.setPublisherProvidedId(this.ppid);\r\n  }\r\n\r\n  private setup() {\r\n    const win: any = window,\r\n      googletag = win.googletag,\r\n      pubads = googletag.pubads();\r\n\r\n    if (this.enableVideoAds) {\r\n      pubads.enableVideoAds();\r\n    }\r\n\r\n    // personalizedAds is default\r\n    if (this.personalizedAds === false) {\r\n      pubads.setRequestNonPersonalizedAds(1);\r\n    }\r\n\r\n    if (this.collapseIfEmpty) {\r\n      pubads.collapseEmptyDivs();\r\n    }\r\n\r\n    // We always refresh ourselves\r\n    pubads.disableInitialLoad();\r\n\r\n    pubads.setForceSafeFrame(this.forceSafeFrame);\r\n    pubads.setCentering(this.centering);\r\n\r\n    this.addLocation(pubads);\r\n    this.addPPID(pubads);\r\n    this.addTargeting(pubads);\r\n    this.addSafeFrameConfig(pubads);\r\n\r\n    // pubads.enableSyncRendering();\r\n    pubads.enableAsyncRendering();\r\n\r\n    if (this.config.singleRequestMode !== true) {\r\n      if (this.config.enableVideoAds) {\r\n        pubads.enableVideoAds();\r\n      }\r\n      googletag.enableServices();\r\n    }\r\n\r\n  }\r\n\r\n  hasLoaded() {\r\n    return this.loaded;\r\n  }\r\n\r\n  defineTask(task) {\r\n    if (isPlatformBrowser(this.platformId)) {\r\n      const win: any = window,\r\n        googletag = win.googletag;\r\n      googletag.cmd.push(task);\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class DfpIDGeneratorService {\r\n\r\n  private generatedIDs = {};\r\n\r\n  generateID() {\r\n    let id = null;\r\n\r\n    do {\r\n      const number = Math.random().toString().slice(2);\r\n      id = 'gpt-ad-' + number;\r\n    } while (id in this.generatedIDs);\r\n\r\n    this.generatedIDs[id] = true;\r\n\r\n    return id;\r\n  }\r\n\r\n  dfpIDGenerator(element) {\r\n    if (element && element.id && !(element.id in this.generatedIDs)) {\r\n      return element.id;\r\n    }\r\n\r\n    const id = this.generateID();\r\n    if (element) { element.id = id; }\r\n\r\n    return id;\r\n  }\r\n\r\n  isTaken(id) {\r\n    return id in this.generatedIDs;\r\n  }\r\n\r\n  isUnique(id) {\r\n    return !this.isTaken(id);\r\n  }\r\n\r\n}\r\n","import { Injectable, EventEmitter, Optional, Injector, Inject } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\nimport { Subscription, timer, from } from 'rxjs';\r\n\r\nimport { DfpConfig, DFP_CONFIG } from '../class';\r\nimport { ParseDurationService } from './parse-duration.service';\r\n\r\nclass DFPRefreshError extends Error { }\r\n\r\ndeclare var googletag;\r\n\r\n@Injectable()\r\nexport class DfpRefreshService {\r\n\r\n  refreshEvent: EventEmitter<any> = new EventEmitter();\r\n  private refreshSlots = [];\r\n  private singleRequest: Subscription;\r\n  private intervals = {};\r\n\r\n  constructor(\r\n    @Optional() @Inject(DFP_CONFIG)\r\n    private config: DfpConfig,\r\n    private inject: Injector,\r\n    private parseDuration: ParseDurationService\r\n  ) { }\r\n\r\n  slotRefresh(slot, refreshInterval?, initRefresh = false) {\r\n    const deferred: Promise<any> = from([slot]).toPromise(),\r\n      task = { slot: slot, deferred: deferred };\r\n\r\n    deferred.then(() => {\r\n      if (this.hasSlotInterval(slot)) {\r\n        this.cancelInterval(slot);\r\n      }\r\n      if (refreshInterval) {\r\n        this.addSlotInterval(task, refreshInterval);\r\n      }\r\n    });\r\n\r\n    if (this.config.singleRequestMode === true && initRefresh) {\r\n      // Use a timer to handle refresh of a single request mode\r\n      this.refreshSlots.push(slot);\r\n      if (this.singleRequest && !this.singleRequest.closed) {\r\n        this.singleRequest.unsubscribe();\r\n      }\r\n      this.singleRequest = timer(100).subscribe(() => {\r\n        const pubads = googletag.pubads();\r\n        pubads.enableSingleRequest();\r\n        googletag.enableServices();\r\n        this.refreshSlots.forEach(s => {\r\n          googletag.display(s.getSlotElementId());\r\n        });\r\n        pubads.refresh(this.refreshSlots);\r\n        this.refreshSlots = [];\r\n      });\r\n    } else {\r\n      googletag.display(slot.getSlotElementId());\r\n      this.refresh([task]);\r\n    }\r\n\r\n    return deferred;\r\n  }\r\n\r\n  cancelInterval(slot) {\r\n    if (!this.hasSlotInterval(slot)) {\r\n      throw new DFPRefreshError('No interval for given slot');\r\n    }\r\n\r\n    const interval: Subscription = this.intervals[this.slotIntervalKey(slot)];\r\n    interval.unsubscribe();\r\n    delete this.intervals[slot];\r\n\r\n    return this;\r\n  }\r\n\r\n  private hasSlotInterval(slot) {\r\n    return this.slotIntervalKey(slot) in this.intervals;\r\n  }\r\n\r\n  private refresh(tasks?) {\r\n    if (tasks === undefined) {\r\n      googletag.cmd.push(() => {\r\n        googletag.pubads().refresh();\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (tasks.length === 0) { return false; }\r\n\r\n    googletag.cmd.push(() => {\r\n      googletag.pubads().refresh(tasks.map(task => task.slot));\r\n      tasks.forEach(task => {\r\n        Promise.resolve(task.slot);\r\n      });\r\n    });\r\n  }\r\n\r\n  private addSlotInterval(task, interval) {\r\n    const parsedInterval = this.parseDuration.parseDuration(interval);\r\n    this.validateInterval(parsedInterval, interval);\r\n\r\n    const refresh = timer(parsedInterval, parsedInterval).subscribe(() => {\r\n      const doc = this.inject.get(DOCUMENT);\r\n      if (!this.hiddenCheck(doc.getElementById(task.slot.getSlotElementId()))) {\r\n        this.refresh([task]);\r\n        this.refreshEvent.emit(task.slot);\r\n      }\r\n    });\r\n\r\n    this.intervals[this.slotIntervalKey(task.slot)] = refresh;\r\n\r\n    return refresh;\r\n  }\r\n\r\n  private slotIntervalKey(slot) {\r\n    return slot.getSlotId().getDomId();\r\n  }\r\n\r\n  private validateInterval(milliseconds, beforeParsing) {\r\n    if (milliseconds < 1000) {\r\n      console.warn('Careful: ${beforeParsing} is quite a low interval!');\r\n    }\r\n  }\r\n\r\n  hiddenCheck(element: Element) {\r\n    if (typeof (window) !== 'undefined') {\r\n      const css = window.getComputedStyle(element);\r\n      if (css.display === 'none') {\r\n        return true;\r\n      } else if (element.parentElement) {\r\n        return this.hiddenCheck(element.parentElement);\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","import {\r\n  Directive, ElementRef,\r\n  Input, Output, EventEmitter,\r\n  OnInit, AfterViewInit, OnDestroy, Inject, PLATFORM_ID, Optional\r\n} from '@angular/core';\r\nimport { isPlatformBrowser } from '@angular/common';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\n\r\nimport { Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\nimport { DfpService, DfpIDGeneratorService, DfpRefreshService } from '../service';\r\n\r\nimport { DFPIncompleteError, GoogleSlot, DfpConfig, DFP_CONFIG } from '../class';\r\n\r\ndeclare var googletag;\r\n\r\nexport class DfpRefreshEvent {\r\n  type: string;\r\n  slot: any;\r\n  data?: any;\r\n}\r\n\r\n@Directive({\r\n  selector: 'dfp-ad'\r\n})\r\nexport class DfpAdDirective implements OnInit, AfterViewInit, OnDestroy {\r\n\r\n  @Input() adUnit: string;\r\n  @Input() clickUrl: string;\r\n  @Input() forceSafeFrame: boolean;\r\n  @Input() safeFrameConfig: string;\r\n  @Input() refresh: string;\r\n  @Input() collapseIfEmpty: boolean;\r\n\r\n  @Output() afterRefresh: EventEmitter<DfpRefreshEvent> = new EventEmitter();\r\n\r\n  private sizes = [];\r\n\r\n  private responsiveMapping = [];\r\n\r\n  private targetings = [];\r\n\r\n  private exclusions = [];\r\n\r\n  private scripts = [];\r\n\r\n  private slot: GoogleSlot;\r\n\r\n  private onSameNavigation: Subscription;\r\n\r\n  constructor(\r\n    @Inject(PLATFORM_ID) private platformId: Object,\r\n    private elementRef: ElementRef,\r\n    private dfp: DfpService,\r\n    private dfpIDGenerator: DfpIDGeneratorService,\r\n    private dfpRefresh: DfpRefreshService,\r\n    @Inject(DFP_CONFIG) private config: DfpConfig,\r\n    @Optional() router: Router\r\n  ) {\r\n    if (isPlatformBrowser(this.platformId)) {\r\n      this.dfpRefresh.refreshEvent.subscribe(slot => {\r\n        if (slot === this.slot) {\r\n          this.afterRefresh.emit({ type: 'refresh', slot: slot });\r\n        }\r\n      });\r\n      if (router) {\r\n        this.onSameNavigation = router.events.pipe(filter(event => event instanceof NavigationEnd))\r\n          .subscribe((event: NavigationEnd) => {\r\n            if (this.slot && !this.refresh && this.config.onSameNavigation === 'refresh') {\r\n              this.refreshContent.call(this);\r\n            }\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (isPlatformBrowser(this.platformId)) {\r\n      this.dfpIDGenerator.dfpIDGenerator(this.elementRef.nativeElement);\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (isPlatformBrowser(this.platformId)) {\r\n      this.dfp.defineTask(() => {\r\n        this.defineSlot();\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.slot) {\r\n      googletag.destroySlots([this.slot]);\r\n    }\r\n    if (this.onSameNavigation) {\r\n      this.onSameNavigation.unsubscribe();\r\n    }\r\n  }\r\n\r\n  private setResponsiveMapping(slot) {\r\n    const ad = this.getState();\r\n\r\n    if (ad.responsiveMapping.length === 0) {\r\n      return;\r\n    }\r\n\r\n    const sizeMapping = googletag.sizeMapping();\r\n\r\n    ad.responsiveMapping.forEach(mapping => {\r\n      sizeMapping.addSize(mapping.viewportSize, mapping.adSizes);\r\n    });\r\n\r\n    slot.defineSizeMapping(sizeMapping.build());\r\n  }\r\n\r\n  private defineSlot() {\r\n    const ad = this.getState(),\r\n      element = this.elementRef.nativeElement;\r\n\r\n    this.slot = googletag.defineSlot(ad.adUnit, ad.sizes, element.id);\r\n\r\n    if (this.forceSafeFrame !== undefined && ad.forceSafeFrame === !this.config.forceSafeFrame) {\r\n      this.slot.setForceSafeFrame(ad.forceSafeFrame);\r\n    }\r\n\r\n    if (ad.clickUrl) {\r\n      this.slot.setClickUrl(ad.clickUrl);\r\n    }\r\n\r\n    if (ad.collapseIfEmpty) {\r\n      this.slot.setCollapseEmptyDiv(true, true);\r\n    }\r\n\r\n    if (ad.safeFrameConfig) {\r\n      this.slot.setSafeFrameConfig(\r\n        (JSON.parse(ad.safeFrameConfig))\r\n      );\r\n    }\r\n\r\n    this.slot.renderEnded = (googleSlotEvent: IArguments) => {\r\n      this.afterRefresh.emit({ type: 'renderEnded', slot: this.slot, data: googleSlotEvent });\r\n    };\r\n\r\n    this.setResponsiveMapping(this.slot);\r\n\r\n    ad.targetings.forEach(targeting => {\r\n      this.slot.setTargeting(targeting.key, targeting.values);\r\n    });\r\n\r\n    ad.exclusions.forEach(exclusion => {\r\n      this.slot.setCategoryExclusion(exclusion);\r\n    });\r\n\r\n    ad.scripts.forEach(script => { script(this.slot); });\r\n\r\n    if (this.config.enableVideoAds) {\r\n      this.slot.addService(googletag.companionAds());\r\n    }\r\n\r\n    this.slot.addService(googletag.pubads());\r\n\r\n    this.refreshContent();\r\n  }\r\n\r\n  private refreshContent() {\r\n    this.dfpRefresh.slotRefresh(this.slot, this.refresh, true).then(slot => {\r\n      this.afterRefresh.emit({ type: 'init', slot: slot });\r\n    });\r\n  }\r\n\r\n  checkValid() {\r\n    if (this.sizes.length === 0) {\r\n      throw new DFPIncompleteError('dfp-ad', 'dfp-size');\r\n    }\r\n    if (!this.adUnit) {\r\n      throw new DFPIncompleteError('dfp-ad', 'ad-unit', true);\r\n    }\r\n  }\r\n\r\n  get isHidden() {\r\n    return this.dfpRefresh.hiddenCheck(this.elementRef.nativeElement);\r\n  }\r\n\r\n  getState() {\r\n    this.checkValid();\r\n    return Object.freeze({\r\n      sizes: this.sizes,\r\n      responsiveMapping: this.responsiveMapping,\r\n      targetings: this.targetings,\r\n      exclusions: this.exclusions,\r\n      adUnit: this.adUnit,\r\n      forceSafeFrame: this.forceSafeFrame === true,\r\n      safeFrameConfig: this.safeFrameConfig,\r\n      clickUrl: this.clickUrl,\r\n      refresh: this.refresh,\r\n      scripts: this.scripts,\r\n      collapseIfEmpty: this.collapseIfEmpty === true\r\n    });\r\n  }\r\n\r\n  addSize(size) {\r\n    this.sizes.push(size);\r\n  }\r\n\r\n  addResponsiveMapping(mapping) {\r\n    this.responsiveMapping.push(mapping);\r\n  }\r\n\r\n  addTargeting(targeting) {\r\n    this.targetings.push(targeting);\r\n  }\r\n\r\n  addExclusion(exclusion) {\r\n    this.exclusions.push(exclusion);\r\n  }\r\n\r\n  addScript(script) {\r\n    this.scripts.push(script);\r\n  }\r\n\r\n}\r\n","import {\r\n    Directive, ElementRef,\r\n    Inject, forwardRef,\r\n    HostListener\r\n} from '@angular/core';\r\n\r\nimport { DfpAdDirective } from './dfp-ad.directive';\r\nimport { DfpRefreshService } from '../service';\r\n\r\n@Directive({\r\n    selector: 'dfp-ad[responsive]'\r\n})\r\nexport class DfpAdResponsiveDirective {\r\n\r\n    private iframe: HTMLIFrameElement;\r\n    private iframeWidth: number;\r\n    private slot: any;\r\n\r\n    constructor(\r\n        private elementRef: ElementRef,\r\n        @Inject(forwardRef(() => DfpAdDirective))\r\n        private ad: DfpAdDirective,\r\n        private dfpRefresh: DfpRefreshService\r\n    ) {\r\n        this.ad.afterRefresh.subscribe(event => {\r\n            this.slot = event.slot;\r\n        });\r\n    }\r\n\r\n    @HostListener('window:resize')\r\n    normalizeIframe() {\r\n        if (this.ad.isHidden) {\r\n            return false;\r\n        }\r\n        this.iframe = this.iframe || this.getIframe();\r\n        if (!this.iframe) { return false; }\r\n\r\n        this.iframeWidth = this.iframeWidth || +this.iframe.width;\r\n\r\n        const winWidth = window.innerWidth;\r\n\r\n        let state = this.ad.getState(),\r\n            width = 0;\r\n\r\n        state.sizes.forEach(size => {\r\n            if (size[0] < winWidth) {\r\n                width = Math.max(width, size[0]);\r\n            }\r\n        });\r\n\r\n        if (state.sizes.length > 1 && width !== this.iframeWidth) {\r\n            state = this.ad.getState();\r\n            this.iframeWidth = width;\r\n            this.iframe.setAttribute('width', width + '');\r\n            this.dfpRefresh.slotRefresh(this.slot, state.refresh).then(slot => {\r\n                this.ad.afterRefresh.emit({ type: 'resize', slot: slot });\r\n                this.iframe = this.getIframe();\r\n            });\r\n        }\r\n    }\r\n\r\n    getIframe() {\r\n        const ad: Element = this.elementRef.nativeElement,\r\n            iframe = ad.querySelector('iframe');\r\n        if (iframe && +iframe.width > 0) {\r\n            return iframe;\r\n        }\r\n    }\r\n}\r\n","import { Directive, Inject, forwardRef, Input, OnInit } from '@angular/core';\r\n\r\nimport { DfpAdDirective } from './dfp-ad.directive';\r\n\r\n@Directive({\r\n  selector: 'dfp-responsive'\r\n})\r\nexport class DfpResponsiveDirective implements OnInit {\r\n\r\n  @Input() viewport = [0, 0];\r\n  @Input() adSizes = [];\r\n\r\n  constructor(\r\n    @Inject(forwardRef(() => DfpAdDirective))\r\n    private ad: DfpAdDirective\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.ad.addResponsiveMapping(this.getState());\r\n  }\r\n\r\n  @Input()\r\n  set viewWidth(val: number) {\r\n    if (val > 0) {\r\n      this.viewport[0] = val;\r\n    }\r\n  }\r\n\r\n  @Input()\r\n  set viewHeight(val: number) {\r\n    if (val > 0) {\r\n      this.viewport[1] = val;\r\n    }\r\n  }\r\n\r\n  addSize(size) {\r\n    this.adSizes.push(size);\r\n  }\r\n\r\n  getState() {\r\n    return Object.freeze({\r\n      viewportSize: this.viewport,\r\n      adSizes: this.adSizes\r\n    });\r\n  }\r\n}\r\n","import { Directive, ElementRef, Input, Inject, forwardRef, OnInit, Optional } from '@angular/core';\r\n\r\nimport { DfpAdDirective } from './dfp-ad.directive';\r\nimport { DfpResponsiveDirective } from './dfp-responsive.directive';\r\n\r\n@Directive({\r\n  selector: 'dfp-size'\r\n})\r\nexport class DfpSizeDirective implements OnInit {\r\n\r\n  @Input() width: number;\r\n  @Input() height: number;\r\n\r\n  constructor(\r\n    private elementRef: ElementRef,\r\n    @Inject(forwardRef(() => DfpAdDirective))\r\n    private ad: DfpAdDirective,\r\n    @Optional() @Inject(forwardRef(() => DfpResponsiveDirective))\r\n    private resp: DfpResponsiveDirective\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    const target = this.resp || this.ad,\r\n      innerText: string = this.elementRef.nativeElement.innerText;\r\n\r\n    if (this.width && this.height) {\r\n      target.addSize([this.width, this.height]);\r\n    } else if (innerText.trim() !== '') {\r\n      target.addSize(innerText);\r\n    }\r\n  }\r\n\r\n}\r\n","import { Directive, AfterContentInit, Input, Inject, forwardRef } from '@angular/core';\r\n\r\nimport { DFPIncompleteError } from '../class';\r\nimport { DfpAdDirective } from './dfp-ad.directive';\r\n\r\n@Directive({\r\n  selector: 'dfp-targeting'\r\n})\r\nexport class DfpTargetingDirective implements AfterContentInit {\r\n\r\n  @Input() key: string;\r\n\r\n  @Input()\r\n  set value(val: string | Array<string>) {\r\n    if (val instanceof Array) {\r\n      val.forEach(v => this.addValue(v));\r\n    } else {\r\n      this.addValue(val);\r\n    }\r\n  }\r\n\r\n  private values = [];\r\n\r\n  constructor(\r\n    @Inject(forwardRef(() => DfpAdDirective))\r\n    private ad: DfpAdDirective\r\n  ) { }\r\n\r\n  ngAfterContentInit() {\r\n    const targeting = this.getState();\r\n    this.ad.addTargeting(targeting);\r\n  }\r\n\r\n  checkValid() {\r\n    if (this.key === undefined) {\r\n      throw new DFPIncompleteError('dfp-targeting', 'key', true);\r\n    }\r\n    if (this.values.length === 0) {\r\n      throw new DFPIncompleteError('dfp-targeting', 'value', true);\r\n    }\r\n  }\r\n\r\n  getState() {\r\n    this.checkValid();\r\n    return Object.freeze({\r\n      key: this.key,\r\n      values: this.values\r\n    });\r\n  }\r\n\r\n  addValue(value) {\r\n    if (value && !this.values.find(item => item === value)) {\r\n      this.values.push(value);\r\n    }\r\n  }\r\n\r\n}\r\n","import {\r\n  Directive, ElementRef,\r\n  Inject, forwardRef,\r\n  OnInit\r\n} from '@angular/core';\r\n\r\nimport { DfpAdDirective } from './dfp-ad.directive';\r\n\r\n@Directive({\r\n  selector: 'dfp-exclusion'\r\n})\r\nexport class DfpExclusionDirective implements OnInit {\r\n\r\n  constructor(\r\n    private elementRef: ElementRef,\r\n    @Inject(forwardRef(() => DfpAdDirective))\r\n    private ad: DfpAdDirective\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.ad.addExclusion(this.elementRef.nativeElement.innerText);\r\n  }\r\n\r\n}\r\n","import {\r\n  Directive, ElementRef,\r\n  Inject, forwardRef,\r\n  OnInit\r\n} from '@angular/core';\r\n\r\nimport { DfpTargetingDirective } from './dfp-targeting.directive';\r\n\r\n@Directive({\r\n  selector: 'dfp-value'\r\n})\r\nexport class DfpValueDirective implements OnInit {\r\n\r\n  constructor(\r\n    private elementRef: ElementRef,\r\n    @Inject(forwardRef(() => DfpTargetingDirective))\r\n    private targeting: DfpTargetingDirective\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.targeting.addValue(this.elementRef.nativeElement.innerText);\r\n  }\r\n\r\n}\r\n","import { Directive, Inject, PLATFORM_ID, ElementRef, OnInit, Input, Output, EventEmitter, Renderer2 } from '@angular/core';\r\nimport { isPlatformBrowser } from '@angular/common';\r\n\r\nimport { loadImaSdk } from '@alugha/ima';\r\n\r\nimport { DfpIDGeneratorService } from '../service';\r\n\r\n@Directive({\r\n  selector: 'dfp-video'\r\n})\r\nexport class DfpVideoDirective implements OnInit {\r\n\r\n  @Input() width: number;\r\n  @Input() height: number;\r\n\r\n  @Input() adTag: string;\r\n  @Input() adActions: EventEmitter<'play' | 'pause' | 'resume'>;\r\n\r\n  @Output() adEvents = new EventEmitter<any>();\r\n\r\n  contentPlayer: HTMLVideoElement;\r\n  adContainer: HTMLElement;\r\n\r\n  private contentCompleteCalled: boolean;\r\n  private adDisplayContainer: google.ima.AdDisplayContainer;\r\n  private adsLoader: google.ima.AdsLoader;\r\n  private adsManager: google.ima.AdsManager;\r\n  private adsDone = false;\r\n\r\n  constructor(\r\n    @Inject(PLATFORM_ID) private platformId: Object,\r\n    private elementRef: ElementRef,\r\n    private renderer: Renderer2,\r\n    private dfpIDGenerator: DfpIDGeneratorService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    if (isPlatformBrowser(this.platformId)) {\r\n\r\n      const el = this.elementRef.nativeElement;\r\n\r\n      this.dfpIDGenerator.dfpIDGenerator(el);\r\n\r\n      this.contentPlayer = el.querySelector('video');\r\n      this.renderer.setAttribute(this.contentPlayer, 'width', this.width.toString());\r\n      this.renderer.setAttribute(this.contentPlayer, 'height', this.height.toString());\r\n\r\n      this.adContainer = el.querySelector('.ad-container');\r\n      if (!this.adContainer) {\r\n        this.adContainer = this.renderer.createElement('div');\r\n        this.renderer.addClass(this.adContainer, 'ad-container');\r\n        this.renderer.appendChild(el, this.adContainer);\r\n      }\r\n\r\n      // ima setup\r\n      loadImaSdk().then(() => this.setUpIMA());\r\n\r\n      // simple control\r\n      this.adActions.subscribe(act => {\r\n        switch (act) {\r\n          case 'play':\r\n            this.play();\r\n            break;\r\n          case 'pause':\r\n            this.pause();\r\n            break;\r\n          case 'resume':\r\n            this.resume();\r\n            break;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  play() {\r\n    if (!this.adsDone) {\r\n      this.initialUserAction();\r\n      this.loadAds();\r\n      this.adsDone = true;\r\n    }\r\n  }\r\n\r\n  pause() {\r\n    if (this.adsManager) {\r\n      this.adsManager.pause();\r\n    }\r\n  }\r\n\r\n  resume() {\r\n    if (this.adsManager) {\r\n      this.adsManager.resume();\r\n    }\r\n  }\r\n\r\n  setUpIMA() {\r\n    // Create the ad display container.\r\n    this.adDisplayContainer = new google.ima.AdDisplayContainer(this.adContainer, this.contentPlayer);\r\n    // Create ads loader.\r\n    this.adsLoader = new google.ima.AdsLoader(this.adDisplayContainer);\r\n    // Listen and respond to ads loaded and error events.\r\n    this.adsLoader.addEventListener(\r\n      google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED,\r\n      event => this.onAdsManagerLoaded(event),\r\n      false);\r\n    this.adsLoader.addEventListener(\r\n      google.ima.AdErrorEvent.Type.AD_ERROR,\r\n      event => this.onAdError(event),\r\n      false);\r\n\r\n    // An event listener to tell the SDK that our content video\r\n    // is completed so the SDK can play any post-roll ads.\r\n    this.contentPlayer.onended = () => {\r\n      this.contentEnded();\r\n    };\r\n  }\r\n\r\n  initialUserAction() {\r\n    this.adDisplayContainer.initialize();\r\n    this.contentPlayer.load();\r\n  }\r\n\r\n  requestAds(adTagUrl) {\r\n    const adsRequest = new google.ima.AdsRequest();\r\n    adsRequest.adTagUrl = adTagUrl;\r\n    adsRequest.linearAdSlotWidth = this.width;\r\n    adsRequest.linearAdSlotHeight = this.height;\r\n    adsRequest.nonLinearAdSlotWidth = this.width;\r\n    adsRequest.nonLinearAdSlotHeight = this.height;\r\n    this.adsLoader.requestAds(adsRequest);\r\n  }\r\n\r\n  contentEnded() {\r\n    this.contentCompleteCalled = true;\r\n    this.adsLoader.contentComplete();\r\n  }\r\n\r\n  onAdsManagerLoaded(adsManagerLoadedEvent) {\r\n    const adsRenderingSettings = new google.ima.AdsRenderingSettings();\r\n    adsRenderingSettings.restoreCustomPlaybackStateOnAdBreakComplete = true;\r\n    this.adsManager = adsManagerLoadedEvent.getAdsManager(\r\n      this.contentPlayer, adsRenderingSettings);\r\n    this.startAdsManager(this.adsManager);\r\n  }\r\n\r\n  startAdsManager(adsManager) {\r\n    // Attach the pause/resume events.\r\n    adsManager.addEventListener(\r\n      google.ima.AdEvent.Type.CONTENT_PAUSE_REQUESTED,\r\n      () => this.onContentPauseRequested(),\r\n      false,\r\n      this);\r\n    adsManager.addEventListener(\r\n      google.ima.AdEvent.Type.CONTENT_RESUME_REQUESTED,\r\n      () => this.onContentResumeRequested(),\r\n      false,\r\n      this);\r\n    // Handle errors.\r\n    adsManager.addEventListener(\r\n      google.ima.AdErrorEvent.Type.AD_ERROR,\r\n      event => this.onAdError(event),\r\n      false,\r\n      this);\r\n    const events = [google.ima.AdEvent.Type.ALL_ADS_COMPLETED,\r\n    google.ima.AdEvent.Type.CLICK,\r\n    google.ima.AdEvent.Type.COMPLETE,\r\n    google.ima.AdEvent.Type.FIRST_QUARTILE,\r\n    google.ima.AdEvent.Type.LOADED,\r\n    google.ima.AdEvent.Type.MIDPOINT,\r\n    google.ima.AdEvent.Type.PAUSED,\r\n    google.ima.AdEvent.Type.STARTED,\r\n    google.ima.AdEvent.Type.THIRD_QUARTILE];\r\n    events.forEach(event =>\r\n      adsManager.addEventListener(event, adEvent => this.onAdEvent(adEvent), false)\r\n    );\r\n\r\n    adsManager.init(\r\n      this.width,\r\n      this.height,\r\n      google.ima.ViewMode.NORMAL);\r\n\r\n    adsManager.start();\r\n  }\r\n\r\n  onContentPauseRequested() {\r\n    this.pauseForAd();\r\n  }\r\n\r\n  onContentResumeRequested() {\r\n    // Without this check the video starts over from the beginning on a\r\n    // post-roll's CONTENT_RESUME_REQUESTED\r\n    if (!this.contentCompleteCalled) {\r\n      this.resumeAfterAd();\r\n    }\r\n  }\r\n\r\n  onAdEvent(adEvent) {\r\n    if (adEvent.type === google.ima.AdEvent.Type.LOADED) {\r\n      const ad = adEvent.getAd();\r\n      if (!ad.isLinear()) {\r\n        this.onContentResumeRequested();\r\n      }\r\n    }\r\n    this.adEvents.emit(adEvent);\r\n  }\r\n\r\n  onAdError(adErrorEvent) {\r\n    if (this.adsManager) {\r\n      this.adsManager.destroy();\r\n    }\r\n    this.resumeAfterAd();\r\n    this.adEvents.emit(adErrorEvent);\r\n  }\r\n\r\n  // application functions\r\n\r\n  resumeAfterAd() {\r\n    this.contentPlayer.play();\r\n  }\r\n\r\n  pauseForAd() {\r\n    this.contentPlayer.pause();\r\n  }\r\n\r\n  loadAds() {\r\n    this.requestAds(this.adTag);\r\n  }\r\n\r\n}\r\n","import {\r\n  Directive, ElementRef,\r\n  Input,\r\n  OnInit,\r\n  Inject,\r\n  PLATFORM_ID\r\n} from '@angular/core';\r\nimport { isPlatformBrowser } from '@angular/common';\r\n\r\n@Directive({\r\n  selector: 'dfp-audience-pixel'\r\n})\r\nexport class DfpAudiencePixelDirective implements OnInit {\r\n\r\n  @Input() adUnit: string;\r\n  @Input() segmentId: number;\r\n  @Input() ppid: number;\r\n\r\n  constructor(\r\n    @Inject(PLATFORM_ID) private platformId: Object,\r\n    private elementRef: ElementRef\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    if (isPlatformBrowser(this.platformId)) {\r\n      const axel = Math.random(),\r\n        random = axel * 10000000000000;\r\n\r\n      let adUnit = '';\r\n      if (this.adUnit) {\r\n        adUnit = `dc_iu=${this.adUnit}`;\r\n      }\r\n\r\n      let ppid = '';\r\n      if (this.ppid) {\r\n        ppid = `ppid=${this.ppid}`;\r\n      }\r\n\r\n      const pixel = document.createElement('img');\r\n\r\n      pixel.src = 'https://pubads.g.doubleclick.net/activity;ord=';\r\n      pixel.src += `${random};dc_seg=${this.segmentId};${adUnit}${ppid}`;\r\n\r\n      pixel.width = 1;\r\n      pixel.height = 1;\r\n      pixel.border = '0';\r\n\r\n      pixel.style.visibility = 'hidden';\r\n\r\n      this.elementRef.nativeElement.append(pixel);\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { ModuleWithProviders } from '@angular/core';\r\n\r\nimport { DFP_CONFIG, DfpConfig } from './class';\r\n\r\nimport {\r\n  IdleLoad,\r\n  HttpErrorService,\r\n  ParseDurationService,\r\n  ScriptInjectorService,\r\n  DfpService, DfpIDGeneratorService, DfpRefreshService\r\n} from './service';\r\n\r\nimport {\r\n  DfpAdDirective, DfpAdResponsiveDirective,\r\n  DfpSizeDirective,\r\n  DfpResponsiveDirective,\r\n  DfpTargetingDirective, DfpExclusionDirective, DfpValueDirective,\r\n  DfpVideoDirective,\r\n  DfpAudiencePixelDirective\r\n} from './directive';\r\n\r\nconst DIRECTIVES = [\r\n  DfpAdDirective, DfpAdResponsiveDirective,\r\n  DfpSizeDirective,\r\n  DfpResponsiveDirective,\r\n  DfpTargetingDirective, DfpExclusionDirective, DfpValueDirective,\r\n  DfpVideoDirective,\r\n  DfpAudiencePixelDirective\r\n];\r\n\r\nconst SERVICES = [\r\n  HttpErrorService,\r\n  ParseDurationService,\r\n  ScriptInjectorService,\r\n  DfpService, DfpIDGeneratorService, DfpRefreshService\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n\r\n  ],\r\n  declarations: [\r\n    ...DIRECTIVES\r\n  ],\r\n  providers: [\r\n    ...SERVICES\r\n  ],\r\n  exports: [\r\n    ...DIRECTIVES\r\n  ]\r\n})\r\nexport class DfpModule {\r\n  static forRoot(config?: DfpConfig): ModuleWithProviders {\r\n    return {\r\n      ngModule: DfpModule,\r\n      providers: [\r\n        ...(config && config.idleLoad === true ? [IdleLoad] : []),\r\n        { provide: DFP_CONFIG, useValue: config || {} }\r\n      ]\r\n    };\r\n  }\r\n}\r\n"]}